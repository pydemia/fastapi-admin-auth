{
  "id" : "9044d188-1e5d-4208-b3a6-c2201e3e1804",
  "realm" : "fastapi-admin-auth",
  "displayName" : "",
  "displayNameHtml" : "",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : true,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "ae49bb1d-2187-4e21-a32a-607f91c634fc",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "9044d188-1e5d-4208-b3a6-c2201e3e1804",
      "attributes" : { }
    }, {
      "id" : "a902a8c0-17c3-47c8-ae32-7e5aa5e8a609",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "9044d188-1e5d-4208-b3a6-c2201e3e1804",
      "attributes" : { }
    }, {
      "id" : "2c82cf5b-074f-4f5f-ba54-04d368f06bf8",
      "name" : "default-roles-fastapi-admin-auth",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "9044d188-1e5d-4208-b3a6-c2201e3e1804",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "06970f7e-c005-43a3-909c-cd42f2e45b62",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "b40fd48b-c3bd-47c4-9b52-b43ff011c4db",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "39031781-3fd9-422a-aabc-cbd310ceced0",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "c9279631-aea2-42b4-a2ee-c3d0d174eb93",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "b2113b74-1331-4661-a8e0-5743018ffa65",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "3a6a639b-98d6-4e13-9b69-48d6fb3c6883",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "18cd2981-8744-4859-813e-2d32c5524a33",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "ecd0b63b-c900-4676-b7d1-a64db526bdad",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "93cf4ce1-d573-4c95-a6ac-6d7fb44f71b2",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "1bdaf71c-91c5-4ba5-8533-d32a7ae3852d",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "7a24401e-746a-4b92-83f4-3617b713ff01",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-realm", "manage-users", "query-users", "view-identity-providers", "manage-events", "create-client", "manage-authorization", "manage-realm", "query-clients", "impersonation", "query-realms", "view-users", "view-clients", "view-authorization", "manage-clients", "view-events", "manage-identity-providers", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "3bb03d0d-1a37-41f3-87c7-458c4a0e8644",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "19911ea2-41ee-452c-b90e-42725ce5de90",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "61728995-e856-4aaf-bad3-5ba7be1c8b7a",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "084d8233-81ed-44a5-90f7-f9847ab86eec",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "ae92ab54-b9f7-4444-b27b-d5149a8b0e80",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "0d44d9c4-4b11-48ca-9226-930f9b646a0e",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "6626b266-cef9-472b-8cbd-77d90991ffd2",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      }, {
        "id" : "188e51cd-8249-4004-a003-687a3fb81a95",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
        "attributes" : { }
      } ],
      "fastapi-admin-auth-app" : [ {
        "id" : "811f181b-ee8d-42c8-ac1f-9bd2debc57d1",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8ecbe5a1-ce9d-444b-bf8e-37cf7d79d0d2",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ {
        "id" : "035794a7-1cea-4438-8b0b-6bf8f78cbe5c",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e8c22c45-85d5-4e25-aacb-e265f5b8dcf0",
        "attributes" : { }
      } ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "a6159c8c-9656-4a46-be0a-b961af803217",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ebaf7bd1-1e9c-49be-a8c8-28109c8c1982",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "20988d65-e5eb-4bc8-982e-4178c09b0291",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      }, {
        "id" : "7c097986-6e6d-4b2d-adc2-c101c0bf6410",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      }, {
        "id" : "4f491f87-b92b-4c7a-9ed1-d3f0b2ea327e",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      }, {
        "id" : "2d0689da-fd26-4cf1-a1f0-369ce9ae876d",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      }, {
        "id" : "d2cfe509-9a99-4e5f-a09c-96e010cb95c2",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      }, {
        "id" : "5901ccce-2ae9-45fd-9c08-af62ed43567d",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      }, {
        "id" : "b0a80229-bb13-4935-82d1-090cab1000ae",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      }, {
        "id" : "2a27ecf9-cb28-4269-b2fe-5b459adf2d34",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "6daccc6e-9bf0-439c-8789-0a596efc215b",
    "name" : "testgroup",
    "path" : "/testgroup",
    "subGroups" : [ ],
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { }
  } ],
  "defaultRole" : {
    "id" : "2c82cf5b-074f-4f5f-ba54-04d368f06bf8",
    "name" : "default-roles-fastapi-admin-auth",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "9044d188-1e5d-4208-b3a6-c2201e3e1804"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "741ce657-db86-438d-8aff-d3e093ae87b5",
    "username" : "service-account-admin-cli",
    "emailVerified" : false,
    "createdTimestamp" : 1712910476865,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "admin-cli",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-fastapi-admin-auth" ],
    "clientRoles" : {
      "realm-management" : [ "view-realm", "manage-users", "view-identity-providers", "manage-events", "create-client", "query-realms", "view-clients", "view-events", "query-users", "query-clients", "manage-realm", "manage-authorization", "impersonation", "realm-admin", "view-users", "view-authorization", "manage-clients", "manage-identity-providers", "query-groups" ],
      "admin-cli" : [ "uma_protection" ],
      "account" : [ "view-consent", "view-applications", "delete-account", "manage-account", "manage-account-links", "manage-consent", "view-profile", "view-groups" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "fcc6dd1e-6fb8-4f0e-b356-6f85a5efdb90",
    "username" : "service-account-fastapi-admin-auth-app",
    "emailVerified" : false,
    "createdTimestamp" : 1712910364744,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "fastapi-admin-auth-app",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-fastapi-admin-auth" ],
    "clientRoles" : {
      "fastapi-admin-auth-app" : [ "uma_protection" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "7770e08c-504c-4e7a-8803-6097f933c0cd",
    "username" : "testuser",
    "firstName" : "test",
    "lastName" : "user",
    "email" : "testuser@example.com",
    "emailVerified" : true,
    "createdTimestamp" : 1712910152639,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "91164d98-f975-4d3f-85af-0d3f2cf814de",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1712910192308,
      "secretData" : "{\"value\":\"jOq66yRYxvy1UO/b/84UTjG+rC0+c4wum1uluua02xntZfvBQgnesdlZUw1e9jTiLStNbsD8W2XfpKJMnzDmSQ==\",\"salt\":\"t1t2w8AMdrnErqaSKGMEEg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-fastapi-admin-auth" ],
    "notBefore" : 0,
    "groups" : [ "/testgroup" ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "8d847575-8f4e-4c76-ade8-30da6648f3c5",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/fastapi-admin-auth/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/fastapi-admin-auth/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "72b21e81-8f2d-4425-bf93-78f7f43b5b21",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/fastapi-admin-auth/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/fastapi-admin-auth/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "39bcf791-8a10-474d-80d9-9b25a8ca1967",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "e8c22c45-85d5-4e25-aacb-e265f5b8dcf0",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "WJmdud32rsQ4TzbPuGiU1V6pPWhOH8pq",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1712910476",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "ed91e026-c21d-4f5b-87d2-974db681dbcb",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "bb15fe7f-b5ad-43d2-8c01-574153d54f37",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8479ac5d-701c-49ed-b0af-28348cc3696e",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ ],
      "policies" : [ ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "ebaf7bd1-1e9c-49be-a8c8-28109c8c1982",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "8ecbe5a1-ce9d-444b-bf8e-37cf7d79d0d2",
    "clientId" : "fastapi-admin-auth-app",
    "name" : "fastapi-admin-auth-app",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "iRJRjyNKZ3zqbwW3NXHJLhTgbMT20SPM",
    "redirectUris" : [ "/dashboard/*", "/iam/callback", "http://localhost:8000/dashboard/*", "http://localhost:8000/iam/callback" ],
    "webOrigins" : [ "http://localhost:8000" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "authorizationServicesEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1712910364",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+##+http://localhost:8000/dashboard",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "81f76e37-7ea2-4109-8302-67ec143e74d5",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9a6158c1-fffb-4c92-b02f-01a74c803ece",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4ffe9cbc-3bcb-40bb-8584-beb3654b9798",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ],
    "authorizationSettings" : {
      "allowRemoteResourceManagement" : true,
      "policyEnforcementMode" : "ENFORCING",
      "resources" : [ ],
      "policies" : [ ],
      "scopes" : [ ],
      "decisionStrategy" : "UNANIMOUS"
    }
  }, {
    "id" : "ec6ffded-ca06-44b4-aa77-8d058b5463fb",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "bdc21bef-8833-49bf-826d-30a95627552c",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/fastapi-admin-auth/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/fastapi-admin-auth/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "9b8907a6-ab51-4763-be56-1365619444dc",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "7c66c3e0-5f40-4780-a94c-8e8c13a315a1",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "35a85adc-78c8-436e-b5b9-dee60fecd532",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6ac8c7da-793a-4da0-9c03-708c6c129919",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9e1c6c96-e19a-4e52-aff3-d2c8e7e7ec33",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a1878f6e-a0ba-4fdf-b071-309d6ea0a307",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0edcaf28-8569-4aef-97a3-84cd0254a99f",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "b41d0ed0-9ce6-4241-8c31-36b5f976a5d0",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "05bcd616-a883-4469-b527-93de17c43707",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "26be2d2a-3b77-4a90-88f9-04aa06108cf0",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4f834aed-6bd3-4caa-8cc4-242dc33639e8",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "90c471e1-7350-4a44-9ff8-e882f02cfb2b",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "35aa6133-95e1-4415-95b5-d436c01f6128",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ad32ae1c-09e8-49a4-bfe0-76ba5b01218f",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "64f0c87d-797a-4e97-aa7b-a4f9f95c1ea1",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e2025717-324c-43d1-9adb-4b2f0f7c885a",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "848f5022-3328-48cb-a9d5-84348e4985b4",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "008104e4-1544-4fc2-99f2-bd03090978d0",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "d551b86c-1010-4d2a-9d46-0578df4f24d4",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "f32e3a42-03ec-419e-8518-1f71d1594419",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "40cc6e56-34d5-41e6-8aef-d031fca9d96c",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "f9e29293-679a-4bd5-8097-f3a40411192f",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "7b0fea72-d9a0-4f9a-82c0-0468b7a8266b",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "21b89150-b7c2-473b-bf97-eb49a9af6b51",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "08cac19b-11b8-4386-8db7-a41f60647cea",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "7a517549-b8df-4317-8434-9e8ee0014d6f",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "352e044b-bb82-4e70-a8ec-56a605087bda",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "0308e19f-6df2-41d7-8b31-eeb22903c0c9",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f0fafa29-411a-49e5-9b4c-5c28a7642677",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "09fa29c6-7771-484f-9bc0-03ee5c0b0d4d",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "4dae9cb4-c912-40d3-ba79-e9ff45300255",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "29afdf5e-bc1e-4b20-a542-251cfa68fcd1",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "06ac0fd2-2399-499c-908b-191995f4842f",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "e990ee02-6206-41ea-8eb2-128cc0d60466",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "73848cac-7991-4cbc-90e2-c87d1a217411",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "705c2897-0103-44e0-ba48-4b3ac36576c6",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "d93cece3-4376-4cf3-b89b-82e36c0c9b15",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3f56610a-888b-4847-b997-df1218cc796b",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "fd00efc2-405a-4aa3-a22d-84649da8c140",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "8672c8c6-08d6-4189-8ce0-b67c88929238",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper" ]
      }
    }, {
      "id" : "618472bc-9ead-4b49-8fb3-25f60d590898",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "da955fd9-8775-4acd-9750-26711e569b29",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "ba657d9a-a177-417c-83cd-4f94d004c3cc",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "dedaa432-f82f-48a6-b14e-3281b2041be2",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "7406d21c-f3a5-4e3d-b7ac-888385160144",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "9063aa64-a478-42d7-97a2-7c9c7563b929",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "c5f78bf8-66aa-4708-9df4-cd86f717eec5",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAtPTmixKiukEArImY4+6lPZH8RmtehV2X2MUg0YkYksTe6yLDGpjEJmT8ENzpmuppxEDXh9k3082oq9XYznYjnktNQt+cc58vthQQXsD991hieIIsdUXtogVFkOyQzts5e00pbg5XS0vNpTLuUqi0ggK1lBRZDu0MLcrSfP/Q+FPMRdFLDH08n6Rx2I3cvqiszpe1tzpBhw6npmujKaAZScIELs3g9Osu8mFsnCPrPp3/X0k+1AL3XmRUxNKSWrbmAOvkK4T3OOebJNARw1hN/YoAzcfdVR3IPvqEF2SSvd3DPG+v0OD228E7EKDFCp5bdR8fG5mehVHgyFQ2VbOuEQIDAQABAoIBAAbk9ohtj6aA4eKg/LKw+cnZbzsb3cJfKzEUrCQdmQKFBpD+/l/b2ovTsMSf9RTMWfaiqY+NBa7vvM2cuH2fw8pE+FLsH/rqAYxqcef5SofPLdPFcmYOsa/Iy4Jqt/bwpG1TppihSl9FmmaBFPJQaA20xpgnaQ/79TkEq228paijYJwVsHcEIeK5ShsJwNjnbCPA3jKlupNs6iw83oQYA5ZeXtwM2JioLBM5O3cBccSAag97/jEfjNEL9FZzPz7FVHFwFQEdSIwp/5pzwwDHfDEcqV6eHRSITRJe/UjPXWIM+EfOWCjbg+orROgRAneLmd52ofPiUfEU5RsDKMnFEsECgYEA+mQvjQW+qPV60obK+zaiEGtc65jdpD9C9W/b7u8zHa+FQRGswlfPyGEg+zZlmPLGMWnycO6XkX9vBQnMzlBTgNFGzJ9PeeuQlxezjHX9zJiZsOw5JST1sG23/7U2BrXdPkDig8t4o/xHrED2wx3ZdTHj4L2OE9ZYkxXdJlvTr9ECgYEAuQKOhSK3sSl2UpPSSM2obIDBmLF7D5FfH9ELO/GhJLOfh1FEp8K2epb8vnJYG4PCKk5M2P7XHRfto+nx5pByEqugtwZ8bvKPxLOtlhE62ofEgOKkY8ghhU2zThJqGDYt5DuPOdqsw4EJTCKYv2zMIuS8FQDDgNnifdlLjekP6kECgYAMYuxfQ4t8/DfJNlXQO5Gk0krUdMlyGJcNYS02EqsqqsYiw+cR7hofRX7GLpi0Cj53r1AI+iSRVAZ/704sXpji5HdmI/NgiqCqeMevCR83Ac2IjQb+qWdmBOd3RNWZW2HIdJk//87F/fLluIj8efuJ6p/lPDtNC+txy0EXZq+AIQKBgAh/R5Bx0cH/R4HvbB8P4wZou3uJ2z8RzC6n6T4tkNsgrNkIMIEL/lmPCbitg8JvwME0q27j9XlOmgmHOyb9x194Jn+BesGVvmioX/aef/d9eNb6kdZLYM7AjNWvHtRR2LW8zo03r+uix4yJoj5Yft+zZbgJOvF2EGL7Ue8In0SBAoGAPPxLPCQZ5jH+wAAt/2HxDUzrAUyKcTPsRlUFzXxz40NlzIma3uEjUUqE3+aAkh0//9sJW4URk+HLP0vGxk/HZECCX3Ln2JAOP1MudWu7SQER8VYmi/pCtyvqyfn89RqXwq31+8Yjc9eNogeJGBulKpJ4kE/s/qbTwlxktBZlks0=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICszCCAZsCBgGO0WTCYDANBgkqhkiG9w0BAQsFADAdMRswGQYDVQQDDBJmYXN0YXBpLWFkbWluLWF1dGgwHhcNMjQwNDEyMDgxODQ1WhcNMzQwNDEyMDgyMDI1WjAdMRswGQYDVQQDDBJmYXN0YXBpLWFkbWluLWF1dGgwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC09OaLEqK6QQCsiZjj7qU9kfxGa16FXZfYxSDRiRiSxN7rIsMamMQmZPwQ3Oma6mnEQNeH2TfTzair1djOdiOeS01C35xzny+2FBBewP33WGJ4gix1Re2iBUWQ7JDO2zl7TSluDldLS82lMu5SqLSCArWUFFkO7QwtytJ8/9D4U8xF0UsMfTyfpHHYjdy+qKzOl7W3OkGHDqema6MpoBlJwgQuzeD06y7yYWycI+s+nf9fST7UAvdeZFTE0pJatuYA6+QrhPc455sk0BHDWE39igDNx91VHcg++oQXZJK93cM8b6/Q4PbbwTsQoMUKnlt1Hx8bmZ6FUeDIVDZVs64RAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAADcWwQ/PPsQbT7yWijEXAOCoBwWm8h0j4rjgSMOO81vsBi8MBeYdKPu+h6vQKF6cVxIwDjhzDzHyj70v2T4OcvpClXxoLBtbnvMvFMuRc/FNV9MFHBIfr63BZ0ZVNh2I0HY/RhMZkngJJLmeNs2jDOkexNvYILXS+CiG3I5uwW+XUNTCTekiCJK5h9vmYCINsAjyhXijwOkuNKWktrLjb6tYEqVVDYFEnxmBxHwHtXuaLHuEmaQAYRinnAjGwCiEMAWoQHOlnXwqDulplDDYWGeDnOIXAALIKV4DYH2h+WSjmDqTvSF2s5pSRmahkDP0242kg7Ek/1AxCW7dtWcB5c=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "3b20d3c3-d255-43f8-9e32-6936f667f0d5",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "6714ad05-39e0-4ea1-8471-8716aeab1e9d" ],
        "secret" : [ "h5RM7e4VBo5rx6XYohCY6w" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "be6b26b9-b872-4aa8-87f2-a8b96155f4d7",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "53df0448-5067-484b-a254-bf82ba6b4428" ],
        "secret" : [ "ExUj60rszWFmlbJBwlAmKQ65ESLL_JPMdlR_Ybn2kVH4-r_LiPJ0iOuyS7s9pCdiKZFmG33N_hCi8J3rKEs0rPrMxSMH4fweqkK2eJElbZRh6c6WJoxGQhMmNF2gHjEg-EmLQYPhXsqNJbV6DEakwsfLqA5tkE0iWgjr9W0HjJI" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "e6db9014-f13f-42cd-923c-90562af9ac3a",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAl+kAcleTgNAGQkDtzt1u6ru1tHMT+r2ZL1Aa3yAzvIIQEjHF6s5mnzyvQ4+3ZG9BQeZtSmH13AYEKYqHnzomaGZKr21blUQXboI5WVqrIsmzdUb2fxBopWsWBmrfsazCWCwlYWgWDPNtelw2wctMM1ZpxrKoVEXZiBo3SOBnd6ZbkXOGhwy8Odb3EuHjQODSOXgdaYhKHPvYHHN0sZsy22kTRg1nW/ktn3hmFzq2clYRDFyiy9qCvsoC2zGTeamHOTPt4HDR4hSHHN9WK/KjdUV9rILIbCoiQ/TN+qiwKy/qLTONVjK1LXz+JOc0EJB6dW+NKf1QrQES0fg7IR/T5QIDAQABAoIBABKWsPbM76BGFFX8Iv16zC1OHeyAXnQCymFnQHqIMryA/91yGMFkU1tt7hZq2iqgkJAzVbFR7mdnlw/MQ09BKt0Ak2gHDjtkMyfTKJheB24A14Rk1Bn1VJDVW0Maxde0h62JbWOPfI9GJGHiMdMiAOeRTe1CBGYXjAhjCNvSleamlO9w6z9ZHTM1tsT+9Dd8V2T/gncOUnFajswl1g6StbDHVlxugpQSIzANo+0vbOBfmLWZo23tKfIycd4NjWSXeIPnctN1pT5uBbnLI7vrPh7/v/xb2mjplpnXoQ1Wkk13Mj6Dm9kykhHPGGlTkqStYpHeAT2w5BQqdxwMTaodcxECgYEAxmlWhA5rBnfrBHsingHNDL00rVeX45h96ZLzvB39mZlEv9k0mSOqoQYw0wObkXKyswdJQspWmqA26WGQ7BiKNKNpcjgUBkoDorIT9ydGOreb9iwgEhebWCMgHUaANzkSlkcTOfUhzH8kHwm/kqv908ancgtKJ6ZGSYraZ1l2QkkCgYEAxAB0ZAA91wKVMyH6o5QRdf0COM+IIG1Apv4vq2lfwcixauEgqX2qt15PD5g/Q6Z695NDENpP1GlzmzDlOXNi3dVt0lA56e8DdslJ1H1zqopuZNi0FtrCO1OYgRvad1EJBL27wlzjBzftMOCT/cSHsaPUeOrCG3ELimQCRYmJxL0CgYBqMQ7A9waJG72JVG4eq1AXtVxwOiVtBry9Oo2A7XxBrSqCk7n3DIPSUwHmrlOg8QZ7kza+rJTVhVJebn2mHyw5KAzTuPfetdZkSXMuILMR0huDEfLIPCJEdehGQul0pPMxwzCjIHPKg3HNuuXxlmPv6K7N9wTlW7Tav5pNHjCRIQKBgAOvPoDiwEbadZOQf/WzQuDE8NXAkP6LDzwUazD9uh8adrtboBGPmzX3P+U7J3VOG+GrkwcuE3IayWGReb2qvaEN8hKSD4SmSZpiDlFASnxaPdkHeds0IZKb77H9pA26KEE+j9kHhf0MwBi7IA0VNLfSLJxZTWzWozDm0GQeQcjBAoGBAKHIyoOF4hH6PrQRoh4c8HMKPP58UOMvK63gyl/RXYu1/hWE/f4uY6llkQ6kGN6svXJ61Ej9esfzbEDBD/CFe8Ria4BeInZlCY+sBjPNyiIdGjsiWCS9I9A1L8mAfXe8osd+UjOlt3fT1L3Uy3Sv8Bv74e69S7lAQGhMb7eegEXw" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICszCCAZsCBgGO0WTDAjANBgkqhkiG9w0BAQsFADAdMRswGQYDVQQDDBJmYXN0YXBpLWFkbWluLWF1dGgwHhcNMjQwNDEyMDgxODQ1WhcNMzQwNDEyMDgyMDI1WjAdMRswGQYDVQQDDBJmYXN0YXBpLWFkbWluLWF1dGgwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCX6QByV5OA0AZCQO3O3W7qu7W0cxP6vZkvUBrfIDO8ghASMcXqzmafPK9Dj7dkb0FB5m1KYfXcBgQpioefOiZoZkqvbVuVRBdugjlZWqsiybN1RvZ/EGilaxYGat+xrMJYLCVhaBYM8216XDbBy0wzVmnGsqhURdmIGjdI4Gd3pluRc4aHDLw51vcS4eNA4NI5eB1piEoc+9gcc3SxmzLbaRNGDWdb+S2feGYXOrZyVhEMXKLL2oK+ygLbMZN5qYc5M+3gcNHiFIcc31Yr8qN1RX2sgshsKiJD9M36qLArL+otM41WMrUtfP4k5zQQkHp1b40p/VCtARLR+DshH9PlAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJaiJxLnElbQXKUo7UpUVLSAU9pO83wQIh/FcsxhBuggbh3zEtAy69N+J60gQfT6QmVgV47RC+qLJCEFXSkdPCg6kO319jVuyqSa9AoAt9oyIBFXcPcMO7o5T3r1GVdhdtx6aONhFKUgoLnvt7fMyPqcRU0XS0obWQkxgDBOM1kl8mFJyEqAPQdyOltRq4Mth0atSk9Fzh58ovOtM0PwIOZX9dFii0aQRG4JAmpckKI2nn0sk3rVwMvJesj5jrTGMO/68wOclFA2KKsz5eI0Fa9AlG5gT1MG6mkhpVZ6lNi+v4rZV5AexK6B9PiQBZoikIP2rSvnZj6dCRcOmjGXC0U=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "8b203a59-a2ed-4a81-a858-d4bc52a1f39c",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0d40a52a-cdb5-4276-8318-2a711b774d4e",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "744eab6b-5683-4b01-86ca-0a96172d3dce",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2bb4ae63-0d0a-47dd-b766-483379a8559a",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "23bc8dd3-8660-4829-b41f-072ac7d77fd7",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b6f82b47-4a88-4721-a770-b86b01003f7a",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "26f8ece6-c0fa-44a5-844e-f2f0a217aed7",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a961bd2b-7027-45ea-affd-b91dadd00364",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cdc67966-9145-441e-a82a-ed7292225926",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c5d033f5-937c-4af6-af1f-ca56e4082bb0",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2c23660b-dbd0-4675-8547-9d23253902fe",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7136a289-7f39-4c3a-8d3a-1778b2d0cda2",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "78c1132d-6046-4975-9a4c-4866bfb46091",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e9595b89-8ac0-49b5-bb8c-b4a2c75b16f7",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cf714b56-8d71-47e1-b0fb-b5efa6f3bad0",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "89d53e48-ce79-4a93-9661-f8e0df322fd3",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "170e583e-2f9f-4441-aa25-43b39ce72ee7",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4855a4fc-c41b-4a74-8d6d-3eca13e511d3",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "72c6c8ca-1e89-4de1-aca3-16d572e4dcbb",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "abe5cc10-68ae-4856-8e64-b4733d79f55f",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "",
    "acr.loa.map" : "{}"
  },
  "keycloakVersion" : "24.0.2",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}